
#Использовать "../../csv"

Перем ФайлПокрытия;
Перем ФайлJSON;
Перем КаталогПроекта;
Перем КонвертерКонфигурации;
Перем КонвертерыРасширений;
Перем КонвертерыВнешнихМодулей;

#Область ПрограммныйИнтерфейс

Процедура УстановитьКаталогПроекта(ПараметрКаталогПроекта) Экспорт
	КаталогПроекта = ПараметрКаталогПроекта;
КонецПроцедуры

Процедура УстановитьФайлПокрытия(ПараметрФайлПокрытия) Экспорт
	ФайлПокрытия = ПараметрФайлПокрытия;
КонецПроцедуры

Процедура УстановитьФайлJSON(ПараметрФайлJSON) Экспорт
	ФайлJSON = ПараметрФайлJSON;
КонецПроцедуры

Процедура УстановитьКаталогИсходниковКонфигурации(КаталогИсходныхФайлов, ФорматИсходныхФайлов) Экспорт
	КонвертерКонфигурации = Новый КонвертерИменМодулей(КаталогПроекта, КаталогИсходныхФайлов, ФорматИсходныхФайлов);
КонецПроцедуры

Процедура ДобавитьИсходныеФайлыРасширения(ИмяРасширения, КаталогИсходныхФайлов, ФорматИсходныхФайлов) Экспорт

	КонвертерРасширения = Новый КонвертерИменМодулей(КаталогПроекта, КаталогИсходныхФайлов, ФорматИсходныхФайлов);
	КонвертерыРасширений.Вставить(ИмяРасширения, КонвертерРасширения);

КонецПроцедуры

Процедура ДобавитьИсходныеФайлыВнешнегоМодуля(URLМодуля, КаталогИсходныхФайлов, ФорматИсходныхФайлов) Экспорт

	КонвертерВнешнегоМодуля = Новый КонвертерИменМодулей(КаталогПроекта, КаталогИсходныхФайлов, ФорматИсходныхФайлов);
	КонвертерыВнешнихМодулей.Вставить(URLМодуля, КонвертерВнешнегоМодуля);

КонецПроцедуры

Процедура РазобратьПокрытие() Экспорт

	Лог = ПараметрыПриложения.Лог();

	РазбиратьРасширения = (КонвертерыРасширений.Количество() > 0);
	РазбиратьВнешниеМодули = (КонвертерыВнешнихМодулей.Количество() > 0);
	ДанныеПокрытия = Новый Соответствие;

	ЧтениеCSV = Новый ЧтениеCSV();
	ЧтениеCSV.УстановитьФайл(ФайлПокрытия);
	ЧтениеCSV.Прочитать();

	ПоляЗаголовка = ЧтениеCSV.ТекущееЗначение();
	ЧтениеCSV.УстановитьПоляЗаголовка(ПоляЗаголовка);


	Пока ЧтениеCSV.Прочитать() Цикл

		СтрокаПокрытия = ЧтениеCSV.ТекущиеЗначенияПолей(Истина);
		ПрограммныйМодуль = Неопределено;

		ТипКонтейнера = СтрокаПокрытия.ModuleName;
		Если ТипКонтейнера = ТипыКонтейнеровПрограммныхМодулей.МодульКонфигурации Тогда
			
			ПрограммныйМодуль = НайтиМодульКонфигурации(СтрокаПокрытия);
		
		ИначеЕсли РазбиратьРасширения И ТипКонтейнера = ТипыКонтейнеровПрограммныхМодулей.МодульРасширения Тогда
			
			ПрограммныйМодуль = НайтиМодульРасширения(СтрокаПокрытия);
		
		ИначеЕсли РазбиратьВнешниеМодули И ТипКонтейнера = ТипыКонтейнеровПрограммныхМодулей.ВнешнийМодуль Тогда

			ПрограммныйМодуль = НайтиВнешнийМодуль(СтрокаПокрытия);
	
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ПрограммныйМодуль = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ДобавитьПокрытиеJSON(ДанныеПокрытия, СтрокаПокрытия, ПрограммныйМодуль);

	КонецЦикла;

	ЧтениеCSV.Закрыть();

	ЗаписатьДанныеПокрытия(ФайлJSON, ДанныеПокрытия);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта(ПараметрКаталогПроекта) Экспорт
	КаталогПроекта = ПараметрКаталогПроекта;
	КонвертерыРасширений = Новый Соответствие;
	КонвертерыВнешнихМодулей = Новый Соответствие;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиМодульКонфигурации(СтрокаПокрытия)
	
	ВидПрограммногоМодуля = СтрокаПокрытия.PropertyId;
	ИДПрограммногоМодуля = СтрокаПокрытия.ObjectId;

	Возврат КонвертерКонфигурации.НайтиПрограммныйМодуль(ВидПрограммногоМодуля, ИДПрограммногоМодуля);

КонецФункции

Функция НайтиМодульРасширения(СтрокаПокрытия)

	ИмяРасширения = СтрокаПокрытия.ExtentionName;
	КонвертерРасширения = КонвертерыРасширений[ИмяРасширения];

	Если КонвертерРасширения = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидПрограммногоМодуля  = СтрокаПокрытия.PropertyId;
	ИДПрограммногоМодуля   = СтрокаПокрытия.ObjectId;
	Возврат КонвертерРасширения.НайтиПрограммныйМодуль(ВидПрограммногоМодуля, ИДПрограммногоМодуля);
	
КонецФункции

Функция НайтиВнешнийМодуль(СтрокаПокрытия)

	URLМодуля = СтрокаПокрытия.URL;
	КонвертерВнешнегоМодуля = КонвертерыВнешнихМодулей[URLМодуля];
	Если КонвертерВнешнегоМодуля = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВидПрограммногоМодуля  = СтрокаПокрытия.PropertyId;
	ИДПрограммногоМодуля   = СтрокаПокрытия.ObjectId;
	Возврат КонвертерВнешнегоМодуля.НайтиПрограммныйМодуль(ВидПрограммногоМодуля, ИДПрограммногоМодуля);
	
КонецФункции

Процедура ДобавитьПокрытиеJSON(ДанныеПокрытия, СтрокаПокрытия, ПрограммныйМодуль)

	ДанныеПокрытияМодуля = ДанныеПокрытия.Получить(ПрограммныйМодуль.Идентификатор);
	Если ДанныеПокрытияМодуля = Неопределено Тогда
		
		ДанныеПокрытияМодуля = Новый Структура;
		ДанныеПокрытияМодуля.Вставить("ModuleId",   ПрограммныйМодуль.Идентификатор);
		ДанныеПокрытияМодуля.Вставить("SourcePath", ПрограммныйМодуль.Путь);
		ДанныеПокрытияМодуля.Вставить("ObjectId",   СтрокаПокрытия.ObjectId);
		ДанныеПокрытияМодуля.Вставить("PropertyId", СтрокаПокрытия.PropertyId);
		ДанныеПокрытияМодуля.Вставить("ModuleName", СтрокаПокрытия.ModuleName);

		ИмяРасширения = СтрокаПокрытия.ExtentionName;
		Если ЗначениеЗаполнено(ИмяРасширения) Тогда
			ДанныеПокрытияМодуля.Вставить("ExtentionName", ИмяРасширения);
		КонецЕсли;
	
		URLМодуля = СтрокаПокрытия.URL;
		Если ЗначениеЗаполнено(URLМодуля) Тогда
			ДанныеПокрытияМодуля.Вставить("URL", URLМодуля);
		КонецЕсли;
	
		ДанныеПокрытияМодуля.Вставить("LineNo",     Новый Соответствие);
		
		ДанныеПокрытия.Вставить(ПрограммныйМодуль.Идентификатор, ДанныеПокрытияМодуля);
	
	КонецЕсли;

	ДанныеПокрытияМодуля.LineNo.Вставить(СтрокаПокрытия.LineNo, СтрокаПокрытия.LineNo);

КонецПроцедуры

Процедура ЗаписатьДанныеПокрытия(ФайлJSON, ДанныеПокрытия)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ОткрытьФайл(ФайлJSON);
	ЗаписьJSON.ЗаписатьНачалоМассива();

	Для каждого КлючИЗначение Из ДанныеПокрытия Цикл
		
		ДанныеПокрытияМодуля = КлючИЗначение.Значение;
		НомераСтрок = Новый Массив;
		Для Каждого КлючИЗначениеНомерСтроки Из ДанныеПокрытияМодуля.LineNo Цикл
			НомераСтрок.Добавить(КлючИЗначениеНомерСтроки.Значение);
		КонецЦикла;
		ДанныеПокрытияМодуля.LineNo = НомераСтрок;
		
		ЗаписатьJSON(ЗаписьJSON, КлючИЗначение.Значение);

	КонецЦикла;

	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.Закрыть();

КонецПроцедуры

#КонецОбласти
